{"version":3,"file":"image-opt.es.js","sources":["../src/components/Image.vue","../src/util/content-types.ts","../src/util/validate-media.ts","../src/util/index.ts","../../../../mozjpeg/enc/mozjpeg_enc.js","../../../../mozjpeg/enc/mozjpeg-color-space.ts","../src/optimize/mozjpeg.ts","../../../../oxipng/pkg/image_opt.js","../src/optimize/oxipng.ts","../src/optimize/worker-enum.ts","../src/optimize/optimize-worker.ts","../src/optimize/optimize-image.ts","../src/optimize/optimize-wrap.ts","../src/components/Spinner.vue","../src/components/UploadFile.vue","../src/components/OButton.vue","../src/components/Optimizer.vue","../src/util/save-file.ts","../src/index-optimizer.ts"],"sourcesContent":["<template>\n  <div class=\"o-image\">\n    <img v-if=\"asImg && url\" :src=\"url\" class=\"o-asset\" />\n    <div v-else-if=\"url\" :style=\"{ backgroundImage: `url(${url})` }\" class=\"o-asset\" />\n    <svg\n      v-else\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"32\"\n      height=\"32\"\n      viewBox=\"0 0 32 32\"\n      class=\"o-image-default\"\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M19 14a3 3 0 1 0-3-3a3 3 0 0 0 3 3Zm0-4a1 1 0 1 1-1 1a1 1 0 0 1 1-1Z\"\n      />\n      <path\n        fill=\"currentColor\"\n        d=\"M26 4H6a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h20a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2Zm0 22H6v-6l5-5l5.59 5.59a2 2 0 0 0 2.82 0L21 19l5 5Zm0-4.83l-3.59-3.59a2 2 0 0 0-2.82 0L18 19.17l-5.59-5.59a2 2 0 0 0-2.82 0L6 17.17V6h20Z\"\n      />\n    </svg>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, toRefs } from 'vue'\n\nconst props = withDefaults(\n  defineProps<{\n    asset?: string | null\n    asImg?: boolean\n    contentHash?: string | number\n  }>(),\n  {\n    asset: null,\n    contentHash: undefined,\n  },\n)\nconst { asset, contentHash } = toRefs(props)\n\nconst url = computed(() => {\n  const hash = contentHash.value\n  return (asset.value ?? '') + (hash ? `?${hash}` : '')\n})\n</script>\n\n<style lang=\"postcss\" scoped>\n.o-image {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  padding: 4px;\n  position: relative;\n}\n.o-asset {\n  width: 100%;\n  height: 100%;\n  background-size: cover;\n  background-position: center;\n  object-fit: contain;\n  object-position: center;\n}\n.o-default {\n  width: 32px;\n  height: 32px;\n}\n</style>\n","export enum AssetContentType {\n  Png = 'image/png',\n  Jpeg = 'image/jpeg',\n}\n\nexport const CONTENT_TYPES = Object.values(AssetContentType)\n","import { AssetContentType, CONTENT_TYPES } from './content-types'\n\nexport interface MediaRequirements {\n  minWidth?: number\n  minHeight?: number\n  maxWidth?: number\n  maxHeight?: number\n  ext?: string[]\n  types?: AssetContentType[]\n  size?: number\n}\n\nexport interface ValidatedFile {\n  file: File\n  type: AssetContentType\n  src?: string\n  data: ImageData\n}\n\nexport interface IValidateMediaError {\n  fileErrors: string[]\n}\n\nexport function drawableToImageData(drawable: ImageBitmap | HTMLImageElement): ImageData {\n  const width = drawable.width,\n    height = drawable.height,\n    sw = drawable.width,\n    sh = drawable.height\n\n  // Make canvas same size as image\n  const canvas = document.createElement('canvas')\n  canvas.width = width\n  canvas.height = height\n  // Draw image onto canvas\n  const ctx = canvas.getContext('2d')\n  if (!ctx) throw new Error('Could not create canvas context')\n  ctx.drawImage(drawable, 0, 0, sw, sh, 0, 0, width, height)\n  return ctx.getImageData(0, 0, width, height)\n}\n\nasync function decodeImage(url: string): Promise<HTMLImageElement> {\n  const img = new Image()\n  img.decoding = 'async'\n  img.src = url\n  const loaded = new Promise<void>((resolve, reject) => {\n    img.onload = () => resolve()\n    img.onerror = () => reject(Error('Image loading error'))\n  })\n\n  if (img.decode) {\n    // Nice off-thread way supported in Safari/Chrome.\n    // Safari throws on decode if the source is SVG.\n    // https://bugs.webkit.org/show_bug.cgi?id=188347\n    await img.decode().catch(() => null)\n  }\n  // Always await loaded, as we may have bailed due to the Safari bug above.\n  await loaded\n  return img\n}\n\nexport async function blobToImg(blob: Blob): Promise<HTMLImageElement> {\n  const url = URL.createObjectURL(blob)\n\n  try {\n    return await decodeImage(url)\n  } finally {\n    URL.revokeObjectURL(url)\n  }\n}\n\nexport async function builtinDecode(file: File): Promise<ImageData> {\n  // Prefer createImageBitmap as it's the off-thread option for Firefox.\n  const drawable = 'createImageBitmap' in self ? createImageBitmap(file) : blobToImg(file)\n  return drawableToImageData(await drawable)\n}\n\nexport async function validateMedia(\n  requirements: MediaRequirements,\n  file: File,\n): Promise<ValidatedFile> {\n  const errors: string[] = []\n  const validTypes = requirements.types ?? CONTENT_TYPES\n  const type = file.type as AssetContentType\n\n  const { ext, size } = requirements\n  const reqSize = size ?? 0\n  if (reqSize && file.size > reqSize) {\n    errors.push('FILE_SIZE_BIG')\n  }\n  const fileExt = file.name.split('.').pop()\n  if ((ext && (!fileExt || !ext.includes(fileExt))) || !validTypes.includes(type)) {\n    errors.push('FILE_TYPE')\n  }\n  if (errors.length) {\n    throw { fileErrors: errors }\n  }\n\n  try {\n    const fileType = file.type || ''\n    if (fileType.includes('image')) {\n      const img = await builtinDecode(file)\n      const { minWidth, minHeight, maxWidth, maxHeight } = requirements\n      const { width: imgWidth = 0, height: imgHeight = 0 } = img ?? {}\n      if (minWidth && imgWidth < minWidth) {\n        errors.push('Image width too small')\n      }\n      if (minHeight && imgHeight < minHeight) {\n        errors.push('Image height too small')\n      }\n      if (maxWidth && imgWidth > maxWidth) {\n        errors.push('Image width too large')\n      }\n      if (maxHeight && imgHeight > maxHeight) {\n        errors.push('Image height too large')\n      }\n\n      if (!errors.length) {\n        return {\n          file,\n          type,\n          data: img,\n        }\n      }\n    }\n  } catch (error) {\n    errors.push('FILE_TYPE')\n  }\n  throw { fileErrors: errors || ['unknown'] }\n}\n","export * from './save-file'\nexport * from './validate-media'\nexport * from './content-types'\n\nexport const urlFromString = (str: string | undefined): URL | undefined => {\n  if (str) {\n    return new URL(str)\n  }\n  return undefined\n}\n","var Module = (function () {\n  var _scriptDir = import.meta.url;\n\n  return function (Module, binaryFile) {\n    Module = Module || {};\n\n    var Module = typeof Module !== \"undefined\" ? Module : {};\n    var readyPromiseResolve, readyPromiseReject;\n    Module[\"ready\"] = new Promise(function (resolve, reject) {\n      readyPromiseResolve = resolve;\n      readyPromiseReject = reject;\n    });\n    var moduleOverrides = {};\n    var key;\n    for (key in Module) {\n      if (Module.hasOwnProperty(key)) {\n        moduleOverrides[key] = Module[key];\n      }\n    }\n    var arguments_ = [];\n    var thisProgram = \"./this.program\";\n    var quit_ = function (status, toThrow) {\n      throw toThrow;\n    };\n    var ENVIRONMENT_IS_WEB = false;\n    var ENVIRONMENT_IS_WORKER = true;\n    var scriptDirectory = \"\";\n    function locateFile(path) {\n      if (Module[\"locateFile\"]) {\n        return Module[\"locateFile\"](path, scriptDirectory);\n      }\n      return scriptDirectory + path;\n    }\n    var read_, readAsync, readBinary, setWindowTitle;\n    if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n      if (ENVIRONMENT_IS_WORKER) {\n        scriptDirectory = self.location.href;\n      } else if (typeof document !== \"undefined\" && document.currentScript) {\n        scriptDirectory = document.currentScript.src;\n      }\n      if (_scriptDir) {\n        scriptDirectory = _scriptDir;\n      }\n      if (scriptDirectory.indexOf(\"blob:\") !== 0) {\n        scriptDirectory = scriptDirectory.substr(\n          0,\n          scriptDirectory.lastIndexOf(\"/\") + 1\n        );\n      } else {\n        scriptDirectory = \"\";\n      }\n      {\n        read_ = function (url) {\n          var xhr = new XMLHttpRequest();\n          xhr.open(\"GET\", url, false);\n          xhr.send(null);\n          return xhr.responseText;\n        };\n        if (ENVIRONMENT_IS_WORKER) {\n          readBinary = function (url) {\n            var xhr = new XMLHttpRequest();\n            xhr.open(\"GET\", url, false);\n            xhr.responseType = \"arraybuffer\";\n            xhr.send(null);\n            return new Uint8Array(xhr.response);\n          };\n        }\n        readAsync = function (url, onload, onerror) {\n          var xhr = new XMLHttpRequest();\n          xhr.open(\"GET\", url, true);\n          xhr.responseType = \"arraybuffer\";\n          xhr.onload = function () {\n            if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) {\n              onload(xhr.response);\n              return;\n            }\n            onerror();\n          };\n          xhr.onerror = onerror;\n          xhr.send(null);\n        };\n      }\n      setWindowTitle = function (title) {\n        document.title = title;\n      };\n    } else {\n    }\n    var out = Module[\"print\"] || console.log.bind(console);\n    var err = Module[\"printErr\"] || console.warn.bind(console);\n    for (key in moduleOverrides) {\n      if (moduleOverrides.hasOwnProperty(key)) {\n        Module[key] = moduleOverrides[key];\n      }\n    }\n    moduleOverrides = null;\n    if (Module[\"arguments\"]) arguments_ = Module[\"arguments\"];\n    if (Module[\"thisProgram\"]) thisProgram = Module[\"thisProgram\"];\n    if (Module[\"quit\"]) quit_ = Module[\"quit\"];\n    var tempRet0 = 0;\n    var setTempRet0 = function (value) {\n      tempRet0 = value;\n    };\n    var wasmBinary;\n    if (Module[\"wasmBinary\"]) wasmBinary = Module[\"wasmBinary\"];\n    var noExitRuntime = Module[\"noExitRuntime\"] || true;\n    if (typeof WebAssembly !== \"object\") {\n      abort(\"no native wasm support detected\");\n    }\n    var wasmMemory;\n    var ABORT = false;\n    var EXITSTATUS;\n    var UTF8Decoder = new TextDecoder(\"utf8\");\n    function UTF8ArrayToString(heap, idx, maxBytesToRead) {\n      var endIdx = idx + maxBytesToRead;\n      var endPtr = idx;\n      while (heap[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n      return UTF8Decoder.decode(\n        heap.subarray\n          ? heap.subarray(idx, endPtr)\n          : new Uint8Array(heap.slice(idx, endPtr))\n      );\n    }\n    function UTF8ToString(ptr, maxBytesToRead) {\n      if (!ptr) return \"\";\n      var maxPtr = ptr + maxBytesToRead;\n      for (var end = ptr; !(end >= maxPtr) && HEAPU8[end]; ) ++end;\n      return UTF8Decoder.decode(HEAPU8.subarray(ptr, end));\n    }\n    function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n      if (!(maxBytesToWrite > 0)) return 0;\n      var startIdx = outIdx;\n      var endIdx = outIdx + maxBytesToWrite - 1;\n      for (var i = 0; i < str.length; ++i) {\n        var u = str.charCodeAt(i);\n        if (u >= 55296 && u <= 57343) {\n          var u1 = str.charCodeAt(++i);\n          u = (65536 + ((u & 1023) << 10)) | (u1 & 1023);\n        }\n        if (u <= 127) {\n          if (outIdx >= endIdx) break;\n          heap[outIdx++] = u;\n        } else if (u <= 2047) {\n          if (outIdx + 1 >= endIdx) break;\n          heap[outIdx++] = 192 | (u >> 6);\n          heap[outIdx++] = 128 | (u & 63);\n        } else if (u <= 65535) {\n          if (outIdx + 2 >= endIdx) break;\n          heap[outIdx++] = 224 | (u >> 12);\n          heap[outIdx++] = 128 | ((u >> 6) & 63);\n          heap[outIdx++] = 128 | (u & 63);\n        } else {\n          if (outIdx + 3 >= endIdx) break;\n          heap[outIdx++] = 240 | (u >> 18);\n          heap[outIdx++] = 128 | ((u >> 12) & 63);\n          heap[outIdx++] = 128 | ((u >> 6) & 63);\n          heap[outIdx++] = 128 | (u & 63);\n        }\n      }\n      heap[outIdx] = 0;\n      return outIdx - startIdx;\n    }\n    function stringToUTF8(str, outPtr, maxBytesToWrite) {\n      return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n    }\n    function lengthBytesUTF8(str) {\n      var len = 0;\n      for (var i = 0; i < str.length; ++i) {\n        var u = str.charCodeAt(i);\n        if (u >= 55296 && u <= 57343)\n          u = (65536 + ((u & 1023) << 10)) | (str.charCodeAt(++i) & 1023);\n        if (u <= 127) ++len;\n        else if (u <= 2047) len += 2;\n        else if (u <= 65535) len += 3;\n        else len += 4;\n      }\n      return len;\n    }\n    var UTF16Decoder = new TextDecoder(\"utf-16le\");\n    function UTF16ToString(ptr, maxBytesToRead) {\n      var endPtr = ptr;\n      var idx = endPtr >> 1;\n      var maxIdx = idx + maxBytesToRead / 2;\n      while (!(idx >= maxIdx) && HEAPU16[idx]) ++idx;\n      endPtr = idx << 1;\n      return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));\n      var str = \"\";\n      for (var i = 0; !(i >= maxBytesToRead / 2); ++i) {\n        var codeUnit = HEAP16[(ptr + i * 2) >> 1];\n        if (codeUnit == 0) break;\n        str += String.fromCharCode(codeUnit);\n      }\n      return str;\n    }\n    function stringToUTF16(str, outPtr, maxBytesToWrite) {\n      if (maxBytesToWrite === undefined) {\n        maxBytesToWrite = 2147483647;\n      }\n      if (maxBytesToWrite < 2) return 0;\n      maxBytesToWrite -= 2;\n      var startPtr = outPtr;\n      var numCharsToWrite =\n        maxBytesToWrite < str.length * 2 ? maxBytesToWrite / 2 : str.length;\n      for (var i = 0; i < numCharsToWrite; ++i) {\n        var codeUnit = str.charCodeAt(i);\n        HEAP16[outPtr >> 1] = codeUnit;\n        outPtr += 2;\n      }\n      HEAP16[outPtr >> 1] = 0;\n      return outPtr - startPtr;\n    }\n    function lengthBytesUTF16(str) {\n      return str.length * 2;\n    }\n    function UTF32ToString(ptr, maxBytesToRead) {\n      var i = 0;\n      var str = \"\";\n      while (!(i >= maxBytesToRead / 4)) {\n        var utf32 = HEAP32[(ptr + i * 4) >> 2];\n        if (utf32 == 0) break;\n        ++i;\n        if (utf32 >= 65536) {\n          var ch = utf32 - 65536;\n          str += String.fromCharCode(55296 | (ch >> 10), 56320 | (ch & 1023));\n        } else {\n          str += String.fromCharCode(utf32);\n        }\n      }\n      return str;\n    }\n    function stringToUTF32(str, outPtr, maxBytesToWrite) {\n      if (maxBytesToWrite === undefined) {\n        maxBytesToWrite = 2147483647;\n      }\n      if (maxBytesToWrite < 4) return 0;\n      var startPtr = outPtr;\n      var endPtr = startPtr + maxBytesToWrite - 4;\n      for (var i = 0; i < str.length; ++i) {\n        var codeUnit = str.charCodeAt(i);\n        if (codeUnit >= 55296 && codeUnit <= 57343) {\n          var trailSurrogate = str.charCodeAt(++i);\n          codeUnit =\n            (65536 + ((codeUnit & 1023) << 10)) | (trailSurrogate & 1023);\n        }\n        HEAP32[outPtr >> 2] = codeUnit;\n        outPtr += 4;\n        if (outPtr + 4 > endPtr) break;\n      }\n      HEAP32[outPtr >> 2] = 0;\n      return outPtr - startPtr;\n    }\n    function lengthBytesUTF32(str) {\n      var len = 0;\n      for (var i = 0; i < str.length; ++i) {\n        var codeUnit = str.charCodeAt(i);\n        if (codeUnit >= 55296 && codeUnit <= 57343) ++i;\n        len += 4;\n      }\n      return len;\n    }\n    function writeAsciiToMemory(str, buffer, dontAddNull) {\n      for (var i = 0; i < str.length; ++i) {\n        HEAP8[buffer++ >> 0] = str.charCodeAt(i);\n      }\n      if (!dontAddNull) HEAP8[buffer >> 0] = 0;\n    }\n    function alignUp(x, multiple) {\n      if (x % multiple > 0) {\n        x += multiple - (x % multiple);\n      }\n      return x;\n    }\n    var buffer,\n      HEAP8,\n      HEAPU8,\n      HEAP16,\n      HEAPU16,\n      HEAP32,\n      HEAPU32,\n      HEAPF32,\n      HEAPF64;\n    function updateGlobalBufferAndViews(buf) {\n      buffer = buf;\n      Module[\"HEAP8\"] = HEAP8 = new Int8Array(buf);\n      Module[\"HEAP16\"] = HEAP16 = new Int16Array(buf);\n      Module[\"HEAP32\"] = HEAP32 = new Int32Array(buf);\n      Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(buf);\n      Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(buf);\n      Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(buf);\n      Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(buf);\n      Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(buf);\n    }\n    var INITIAL_MEMORY = Module[\"INITIAL_MEMORY\"] || 16777216;\n    var wasmTable;\n    var __ATPRERUN__ = [];\n    var __ATINIT__ = [];\n    var __ATPOSTRUN__ = [];\n    var runtimeInitialized = false;\n    var runtimeExited = false;\n    function preRun() {\n      if (Module[\"preRun\"]) {\n        if (typeof Module[\"preRun\"] == \"function\")\n          Module[\"preRun\"] = [Module[\"preRun\"]];\n        while (Module[\"preRun\"].length) {\n          addOnPreRun(Module[\"preRun\"].shift());\n        }\n      }\n      callRuntimeCallbacks(__ATPRERUN__);\n    }\n    function initRuntime() {\n      runtimeInitialized = true;\n      callRuntimeCallbacks(__ATINIT__);\n    }\n    function exitRuntime() {\n      runtimeExited = true;\n    }\n    function postRun() {\n      if (Module[\"postRun\"]) {\n        if (typeof Module[\"postRun\"] == \"function\")\n          Module[\"postRun\"] = [Module[\"postRun\"]];\n        while (Module[\"postRun\"].length) {\n          addOnPostRun(Module[\"postRun\"].shift());\n        }\n      }\n      callRuntimeCallbacks(__ATPOSTRUN__);\n    }\n    function addOnPreRun(cb) {\n      __ATPRERUN__.unshift(cb);\n    }\n    function addOnInit(cb) {\n      __ATINIT__.unshift(cb);\n    }\n    function addOnPostRun(cb) {\n      __ATPOSTRUN__.unshift(cb);\n    }\n    var runDependencies = 0;\n    var runDependencyWatcher = null;\n    var dependenciesFulfilled = null;\n    function addRunDependency(id) {\n      runDependencies++;\n      if (Module[\"monitorRunDependencies\"]) {\n        Module[\"monitorRunDependencies\"](runDependencies);\n      }\n    }\n    function removeRunDependency(id) {\n      runDependencies--;\n      if (Module[\"monitorRunDependencies\"]) {\n        Module[\"monitorRunDependencies\"](runDependencies);\n      }\n      if (runDependencies == 0) {\n        if (runDependencyWatcher !== null) {\n          clearInterval(runDependencyWatcher);\n          runDependencyWatcher = null;\n        }\n        if (dependenciesFulfilled) {\n          var callback = dependenciesFulfilled;\n          dependenciesFulfilled = null;\n          callback();\n        }\n      }\n    }\n    Module[\"preloadedImages\"] = {};\n    Module[\"preloadedAudios\"] = {};\n    function abort(what) {\n      if (Module[\"onAbort\"]) {\n        Module[\"onAbort\"](what);\n      }\n      what += \"\";\n      err(what);\n      ABORT = true;\n      EXITSTATUS = 1;\n      what = \"abort(\" + what + \"). Build with -s ASSERTIONS=1 for more info.\";\n      var e = new WebAssembly.RuntimeError(what);\n      readyPromiseReject(e);\n      throw e;\n    }\n    var dataURIPrefix = \"data:application/octet-stream;base64,\";\n    function isDataURI(filename) {\n      return filename.startsWith(dataURIPrefix);\n    }\n    var wasmBinaryFile;\n    if (Module[\"locateFile\"]) {\n      if (!isDataURI(wasmBinaryFile)) {\n        wasmBinaryFile = locateFile(wasmBinaryFile);\n      }\n    }\n    function getBinary(file) {\n      try {\n        if (file == wasmBinaryFile && wasmBinary) {\n          return new Uint8Array(wasmBinary);\n        }\n        if (readBinary) {\n          return readBinary(file);\n        } else {\n          throw \"both async and sync fetching of the wasm failed\";\n        }\n      } catch (err) {\n        abort(err);\n      }\n    }\n    function getBinaryPromise() {\n      if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n        if (typeof fetch === \"function\") {\n          return fetch(wasmBinaryFile, { credentials: \"same-origin\" })\n            .then(function (response) {\n              if (!response[\"ok\"]) {\n                throw (\n                  \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\"\n                );\n              }\n              return response[\"arrayBuffer\"]();\n            })\n            .catch(function () {\n              return getBinary(wasmBinaryFile);\n            });\n        }\n      }\n      return Promise.resolve().then(function () {\n        return getBinary(wasmBinaryFile);\n      });\n    }\n    function createWasm(binaryFile) {\n      var info = { a: asmLibraryArg };\n      function receiveInstance(instance, module) {\n        var exports = instance.exports;\n        Module[\"asm\"] = exports;\n        wasmMemory = Module[\"asm\"][\"C\"];\n        updateGlobalBufferAndViews(wasmMemory.buffer);\n        wasmTable = Module[\"asm\"][\"I\"];\n        addOnInit(Module[\"asm\"][\"D\"]);\n        removeRunDependency(\"wasm-instantiate\");\n      }\n      addRunDependency(\"wasm-instantiate\");\n      function receiveInstantiationResult(result) {\n        receiveInstance(result[\"instance\"]);\n      }\n      function instantiateArrayBuffer(receiver) {\n        return getBinaryPromise()\n          .then(function (binary) {\n            var result = WebAssembly.instantiate(binary, info);\n            return result;\n          })\n          .then(receiver, function (reason) {\n            err(\"failed to asynchronously prepare wasm: \" + reason);\n            abort(reason);\n          });\n      }\n      function instantiateAsync(binaryFile) {\n        if (\n          !wasmBinary &&\n          typeof WebAssembly.instantiateStreaming === \"function\" &&\n          typeof fetch === \"function\"\n        ) {\n          return fetch(binaryFile, { credentials: \"same-origin\" }).then(\n            function (response) {\n              var result = WebAssembly.instantiateStreaming(response, info);\n              return result.then(receiveInstantiationResult, function (reason) {\n                err(\"wasm streaming compile failed: \" + reason);\n                err(\"falling back to ArrayBuffer instantiation\");\n                return instantiateArrayBuffer(receiveInstantiationResult);\n              });\n            }\n          );\n        } else {\n          return instantiateArrayBuffer(receiveInstantiationResult);\n        }\n      }\n      if (Module[\"instantiateWasm\"]) {\n        try {\n          var exports = Module[\"instantiateWasm\"](info, receiveInstance);\n          return exports;\n        } catch (e) {\n          err(\"Module.instantiateWasm callback failed with error: \" + e);\n          return false;\n        }\n      }\n      instantiateAsync(binaryFile).catch(readyPromiseReject);\n      return {};\n    }\n    function callRuntimeCallbacks(callbacks) {\n      while (callbacks.length > 0) {\n        var callback = callbacks.shift();\n        if (typeof callback == \"function\") {\n          callback(Module);\n          continue;\n        }\n        var func = callback.func;\n        if (typeof func === \"number\") {\n          if (callback.arg === undefined) {\n            wasmTable.get(func)();\n          } else {\n            wasmTable.get(func)(callback.arg);\n          }\n        } else {\n          func(callback.arg === undefined ? null : callback.arg);\n        }\n      }\n    }\n    var runtimeKeepaliveCounter = 0;\n    function keepRuntimeAlive() {\n      return noExitRuntime || runtimeKeepaliveCounter > 0;\n    }\n    function _atexit(func, arg) {}\n    function ___cxa_thread_atexit(a0, a1) {\n      return _atexit(a0, a1);\n    }\n    var structRegistrations = {};\n    function runDestructors(destructors) {\n      while (destructors.length) {\n        var ptr = destructors.pop();\n        var del = destructors.pop();\n        del(ptr);\n      }\n    }\n    function simpleReadValueFromPointer(pointer) {\n      return this[\"fromWireType\"](HEAPU32[pointer >> 2]);\n    }\n    var awaitingDependencies = {};\n    var registeredTypes = {};\n    var typeDependencies = {};\n    var char_0 = 48;\n    var char_9 = 57;\n    function makeLegalFunctionName(name) {\n      if (undefined === name) {\n        return \"_unknown\";\n      }\n      name = name.replace(/[^a-zA-Z0-9_]/g, \"$\");\n      var f = name.charCodeAt(0);\n      if (f >= char_0 && f <= char_9) {\n        return \"_\" + name;\n      } else {\n        return name;\n      }\n    }\n    function createNamedFunction(name, body) {\n      name = makeLegalFunctionName(name);\n      return new Function(\n        \"body\",\n        \"return function \" +\n          name +\n          \"() {\\n\" +\n          '    \"use strict\";' +\n          \"    return body.apply(this, arguments);\\n\" +\n          \"};\\n\"\n      )(body);\n    }\n    function extendError(baseErrorType, errorName) {\n      var errorClass = createNamedFunction(errorName, function (message) {\n        this.name = errorName;\n        this.message = message;\n        var stack = new Error(message).stack;\n        if (stack !== undefined) {\n          this.stack =\n            this.toString() + \"\\n\" + stack.replace(/^Error(:[^\\n]*)?\\n/, \"\");\n        }\n      });\n      errorClass.prototype = Object.create(baseErrorType.prototype);\n      errorClass.prototype.constructor = errorClass;\n      errorClass.prototype.toString = function () {\n        if (this.message === undefined) {\n          return this.name;\n        } else {\n          return this.name + \": \" + this.message;\n        }\n      };\n      return errorClass;\n    }\n    var InternalError = undefined;\n    function throwInternalError(message) {\n      throw new InternalError(message);\n    }\n    function whenDependentTypesAreResolved(\n      myTypes,\n      dependentTypes,\n      getTypeConverters\n    ) {\n      myTypes.forEach(function (type) {\n        typeDependencies[type] = dependentTypes;\n      });\n      function onComplete(typeConverters) {\n        var myTypeConverters = getTypeConverters(typeConverters);\n        if (myTypeConverters.length !== myTypes.length) {\n          throwInternalError(\"Mismatched type converter count\");\n        }\n        for (var i = 0; i < myTypes.length; ++i) {\n          registerType(myTypes[i], myTypeConverters[i]);\n        }\n      }\n      var typeConverters = new Array(dependentTypes.length);\n      var unregisteredTypes = [];\n      var registered = 0;\n      dependentTypes.forEach(function (dt, i) {\n        if (registeredTypes.hasOwnProperty(dt)) {\n          typeConverters[i] = registeredTypes[dt];\n        } else {\n          unregisteredTypes.push(dt);\n          if (!awaitingDependencies.hasOwnProperty(dt)) {\n            awaitingDependencies[dt] = [];\n          }\n          awaitingDependencies[dt].push(function () {\n            typeConverters[i] = registeredTypes[dt];\n            ++registered;\n            if (registered === unregisteredTypes.length) {\n              onComplete(typeConverters);\n            }\n          });\n        }\n      });\n      if (0 === unregisteredTypes.length) {\n        onComplete(typeConverters);\n      }\n    }\n    function __embind_finalize_value_object(structType) {\n      var reg = structRegistrations[structType];\n      delete structRegistrations[structType];\n      var rawConstructor = reg.rawConstructor;\n      var rawDestructor = reg.rawDestructor;\n      var fieldRecords = reg.fields;\n      var fieldTypes = fieldRecords\n        .map(function (field) {\n          return field.getterReturnType;\n        })\n        .concat(\n          fieldRecords.map(function (field) {\n            return field.setterArgumentType;\n          })\n        );\n      whenDependentTypesAreResolved(\n        [structType],\n        fieldTypes,\n        function (fieldTypes) {\n          var fields = {};\n          fieldRecords.forEach(function (field, i) {\n            var fieldName = field.fieldName;\n            var getterReturnType = fieldTypes[i];\n            var getter = field.getter;\n            var getterContext = field.getterContext;\n            var setterArgumentType = fieldTypes[i + fieldRecords.length];\n            var setter = field.setter;\n            var setterContext = field.setterContext;\n            fields[fieldName] = {\n              read: function (ptr) {\n                return getterReturnType[\"fromWireType\"](\n                  getter(getterContext, ptr)\n                );\n              },\n              write: function (ptr, o) {\n                var destructors = [];\n                setter(\n                  setterContext,\n                  ptr,\n                  setterArgumentType[\"toWireType\"](destructors, o)\n                );\n                runDestructors(destructors);\n              },\n            };\n          });\n          return [\n            {\n              name: reg.name,\n              fromWireType: function (ptr) {\n                var rv = {};\n                for (var i in fields) {\n                  rv[i] = fields[i].read(ptr);\n                }\n                rawDestructor(ptr);\n                return rv;\n              },\n              toWireType: function (destructors, o) {\n                for (var fieldName in fields) {\n                  if (!(fieldName in o)) {\n                    throw new TypeError('Missing field:  \"' + fieldName + '\"');\n                  }\n                }\n                var ptr = rawConstructor();\n                for (fieldName in fields) {\n                  fields[fieldName].write(ptr, o[fieldName]);\n                }\n                if (destructors !== null) {\n                  destructors.push(rawDestructor, ptr);\n                }\n                return ptr;\n              },\n              argPackAdvance: 8,\n              readValueFromPointer: simpleReadValueFromPointer,\n              destructorFunction: rawDestructor,\n            },\n          ];\n        }\n      );\n    }\n    function __embind_register_bigint(\n      primitiveType,\n      name,\n      size,\n      minRange,\n      maxRange\n    ) {}\n    function getShiftFromSize(size) {\n      switch (size) {\n        case 1:\n          return 0;\n        case 2:\n          return 1;\n        case 4:\n          return 2;\n        case 8:\n          return 3;\n        default:\n          throw new TypeError(\"Unknown type size: \" + size);\n      }\n    }\n    function embind_init_charCodes() {\n      var codes = new Array(256);\n      for (var i = 0; i < 256; ++i) {\n        codes[i] = String.fromCharCode(i);\n      }\n      embind_charCodes = codes;\n    }\n    var embind_charCodes = undefined;\n    function readLatin1String(ptr) {\n      var ret = \"\";\n      var c = ptr;\n      while (HEAPU8[c]) {\n        ret += embind_charCodes[HEAPU8[c++]];\n      }\n      return ret;\n    }\n    var BindingError = undefined;\n    function throwBindingError(message) {\n      throw new BindingError(message);\n    }\n    function registerType(rawType, registeredInstance, options) {\n      options = options || {};\n      if (!(\"argPackAdvance\" in registeredInstance)) {\n        throw new TypeError(\n          \"registerType registeredInstance requires argPackAdvance\"\n        );\n      }\n      var name = registeredInstance.name;\n      if (!rawType) {\n        throwBindingError(\n          'type \"' + name + '\" must have a positive integer typeid pointer'\n        );\n      }\n      if (registeredTypes.hasOwnProperty(rawType)) {\n        if (options.ignoreDuplicateRegistrations) {\n          return;\n        } else {\n          throwBindingError(\"Cannot register type '\" + name + \"' twice\");\n        }\n      }\n      registeredTypes[rawType] = registeredInstance;\n      delete typeDependencies[rawType];\n      if (awaitingDependencies.hasOwnProperty(rawType)) {\n        var callbacks = awaitingDependencies[rawType];\n        delete awaitingDependencies[rawType];\n        callbacks.forEach(function (cb) {\n          cb();\n        });\n      }\n    }\n    function __embind_register_bool(\n      rawType,\n      name,\n      size,\n      trueValue,\n      falseValue\n    ) {\n      var shift = getShiftFromSize(size);\n      name = readLatin1String(name);\n      registerType(rawType, {\n        name: name,\n        fromWireType: function (wt) {\n          return !!wt;\n        },\n        toWireType: function (destructors, o) {\n          return o ? trueValue : falseValue;\n        },\n        argPackAdvance: 8,\n        readValueFromPointer: function (pointer) {\n          var heap;\n          if (size === 1) {\n            heap = HEAP8;\n          } else if (size === 2) {\n            heap = HEAP16;\n          } else if (size === 4) {\n            heap = HEAP32;\n          } else {\n            throw new TypeError(\"Unknown boolean type size: \" + name);\n          }\n          return this[\"fromWireType\"](heap[pointer >> shift]);\n        },\n        destructorFunction: null,\n      });\n    }\n    var emval_free_list = [];\n    var emval_handle_array = [\n      {},\n      { value: undefined },\n      { value: null },\n      { value: true },\n      { value: false },\n    ];\n    function __emval_decref(handle) {\n      if (handle > 4 && 0 === --emval_handle_array[handle].refcount) {\n        emval_handle_array[handle] = undefined;\n        emval_free_list.push(handle);\n      }\n    }\n    function count_emval_handles() {\n      var count = 0;\n      for (var i = 5; i < emval_handle_array.length; ++i) {\n        if (emval_handle_array[i] !== undefined) {\n          ++count;\n        }\n      }\n      return count;\n    }\n    function get_first_emval() {\n      for (var i = 5; i < emval_handle_array.length; ++i) {\n        if (emval_handle_array[i] !== undefined) {\n          return emval_handle_array[i];\n        }\n      }\n      return null;\n    }\n    function init_emval() {\n      Module[\"count_emval_handles\"] = count_emval_handles;\n      Module[\"get_first_emval\"] = get_first_emval;\n    }\n    function __emval_register(value) {\n      switch (value) {\n        case undefined: {\n          return 1;\n        }\n        case null: {\n          return 2;\n        }\n        case true: {\n          return 3;\n        }\n        case false: {\n          return 4;\n        }\n        default: {\n          var handle = emval_free_list.length\n            ? emval_free_list.pop()\n            : emval_handle_array.length;\n          emval_handle_array[handle] = { refcount: 1, value: value };\n          return handle;\n        }\n      }\n    }\n    function __embind_register_emval(rawType, name) {\n      name = readLatin1String(name);\n      registerType(rawType, {\n        name: name,\n        fromWireType: function (handle) {\n          var rv = emval_handle_array[handle].value;\n          __emval_decref(handle);\n          return rv;\n        },\n        toWireType: function (destructors, value) {\n          return __emval_register(value);\n        },\n        argPackAdvance: 8,\n        readValueFromPointer: simpleReadValueFromPointer,\n        destructorFunction: null,\n      });\n    }\n    function _embind_repr(v) {\n      if (v === null) {\n        return \"null\";\n      }\n      var t = typeof v;\n      if (t === \"object\" || t === \"array\" || t === \"function\") {\n        return v.toString();\n      } else {\n        return \"\" + v;\n      }\n    }\n    function floatReadValueFromPointer(name, shift) {\n      switch (shift) {\n        case 2:\n          return function (pointer) {\n            return this[\"fromWireType\"](HEAPF32[pointer >> 2]);\n          };\n        case 3:\n          return function (pointer) {\n            return this[\"fromWireType\"](HEAPF64[pointer >> 3]);\n          };\n        default:\n          throw new TypeError(\"Unknown float type: \" + name);\n      }\n    }\n    function __embind_register_float(rawType, name, size) {\n      var shift = getShiftFromSize(size);\n      name = readLatin1String(name);\n      registerType(rawType, {\n        name: name,\n        fromWireType: function (value) {\n          return value;\n        },\n        toWireType: function (destructors, value) {\n          if (typeof value !== \"number\" && typeof value !== \"boolean\") {\n            throw new TypeError(\n              'Cannot convert \"' + _embind_repr(value) + '\" to ' + this.name\n            );\n          }\n          return value;\n        },\n        argPackAdvance: 8,\n        readValueFromPointer: floatReadValueFromPointer(name, shift),\n        destructorFunction: null,\n      });\n    }\n    function new_(constructor, argumentList) {\n      if (!(constructor instanceof Function)) {\n        throw new TypeError(\n          \"new_ called with constructor type \" +\n            typeof constructor +\n            \" which is not a function\"\n        );\n      }\n      var dummy = createNamedFunction(\n        constructor.name || \"unknownFunctionName\",\n        function () {}\n      );\n      dummy.prototype = constructor.prototype;\n      var obj = new dummy();\n      var r = constructor.apply(obj, argumentList);\n      return r instanceof Object ? r : obj;\n    }\n    function craftInvokerFunction(\n      humanName,\n      argTypes,\n      classType,\n      cppInvokerFunc,\n      cppTargetFunc\n    ) {\n      var argCount = argTypes.length;\n      if (argCount < 2) {\n        throwBindingError(\n          \"argTypes array size mismatch! Must at least get return value and 'this' types!\"\n        );\n      }\n      var isClassMethodFunc = argTypes[1] !== null && classType !== null;\n      var needsDestructorStack = false;\n      for (var i = 1; i < argTypes.length; ++i) {\n        if (\n          argTypes[i] !== null &&\n          argTypes[i].destructorFunction === undefined\n        ) {\n          needsDestructorStack = true;\n          break;\n        }\n      }\n      var returns = argTypes[0].name !== \"void\";\n      var argsList = \"\";\n      var argsListWired = \"\";\n      for (var i = 0; i < argCount - 2; ++i) {\n        argsList += (i !== 0 ? \", \" : \"\") + \"arg\" + i;\n        argsListWired += (i !== 0 ? \", \" : \"\") + \"arg\" + i + \"Wired\";\n      }\n      var invokerFnBody =\n        \"return function \" +\n        makeLegalFunctionName(humanName) +\n        \"(\" +\n        argsList +\n        \") {\\n\" +\n        \"if (arguments.length !== \" +\n        (argCount - 2) +\n        \") {\\n\" +\n        \"throwBindingError('function \" +\n        humanName +\n        \" called with ' + arguments.length + ' arguments, expected \" +\n        (argCount - 2) +\n        \" args!');\\n\" +\n        \"}\\n\";\n      if (needsDestructorStack) {\n        invokerFnBody += \"var destructors = [];\\n\";\n      }\n      var dtorStack = needsDestructorStack ? \"destructors\" : \"null\";\n      var args1 = [\n        \"throwBindingError\",\n        \"invoker\",\n        \"fn\",\n        \"runDestructors\",\n        \"retType\",\n        \"classParam\",\n      ];\n      var args2 = [\n        throwBindingError,\n        cppInvokerFunc,\n        cppTargetFunc,\n        runDestructors,\n        argTypes[0],\n        argTypes[1],\n      ];\n      if (isClassMethodFunc) {\n        invokerFnBody +=\n          \"var thisWired = classParam.toWireType(\" + dtorStack + \", this);\\n\";\n      }\n      for (var i = 0; i < argCount - 2; ++i) {\n        invokerFnBody +=\n          \"var arg\" +\n          i +\n          \"Wired = argType\" +\n          i +\n          \".toWireType(\" +\n          dtorStack +\n          \", arg\" +\n          i +\n          \"); // \" +\n          argTypes[i + 2].name +\n          \"\\n\";\n        args1.push(\"argType\" + i);\n        args2.push(argTypes[i + 2]);\n      }\n      if (isClassMethodFunc) {\n        argsListWired =\n          \"thisWired\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired;\n      }\n      invokerFnBody +=\n        (returns ? \"var rv = \" : \"\") +\n        \"invoker(fn\" +\n        (argsListWired.length > 0 ? \", \" : \"\") +\n        argsListWired +\n        \");\\n\";\n      if (needsDestructorStack) {\n        invokerFnBody += \"runDestructors(destructors);\\n\";\n      } else {\n        for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i) {\n          var paramName = i === 1 ? \"thisWired\" : \"arg\" + (i - 2) + \"Wired\";\n          if (argTypes[i].destructorFunction !== null) {\n            invokerFnBody +=\n              paramName +\n              \"_dtor(\" +\n              paramName +\n              \"); // \" +\n              argTypes[i].name +\n              \"\\n\";\n            args1.push(paramName + \"_dtor\");\n            args2.push(argTypes[i].destructorFunction);\n          }\n        }\n      }\n      if (returns) {\n        invokerFnBody +=\n          \"var ret = retType.fromWireType(rv);\\n\" + \"return ret;\\n\";\n      } else {\n      }\n      invokerFnBody += \"}\\n\";\n      args1.push(invokerFnBody);\n      var invokerFunction = new_(Function, args1).apply(null, args2);\n      return invokerFunction;\n    }\n    function ensureOverloadTable(proto, methodName, humanName) {\n      if (undefined === proto[methodName].overloadTable) {\n        var prevFunc = proto[methodName];\n        proto[methodName] = function () {\n          if (\n            !proto[methodName].overloadTable.hasOwnProperty(arguments.length)\n          ) {\n            throwBindingError(\n              \"Function '\" +\n                humanName +\n                \"' called with an invalid number of arguments (\" +\n                arguments.length +\n                \") - expects one of (\" +\n                proto[methodName].overloadTable +\n                \")!\"\n            );\n          }\n          return proto[methodName].overloadTable[arguments.length].apply(\n            this,\n            arguments\n          );\n        };\n        proto[methodName].overloadTable = [];\n        proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;\n      }\n    }\n    function exposePublicSymbol(name, value, numArguments) {\n      if (Module.hasOwnProperty(name)) {\n        if (\n          undefined === numArguments ||\n          (undefined !== Module[name].overloadTable &&\n            undefined !== Module[name].overloadTable[numArguments])\n        ) {\n          throwBindingError(\"Cannot register public name '\" + name + \"' twice\");\n        }\n        ensureOverloadTable(Module, name, name);\n        if (Module.hasOwnProperty(numArguments)) {\n          throwBindingError(\n            \"Cannot register multiple overloads of a function with the same number of arguments (\" +\n              numArguments +\n              \")!\"\n          );\n        }\n        Module[name].overloadTable[numArguments] = value;\n      } else {\n        Module[name] = value;\n        if (undefined !== numArguments) {\n          Module[name].numArguments = numArguments;\n        }\n      }\n    }\n    function heap32VectorToArray(count, firstElement) {\n      var array = [];\n      for (var i = 0; i < count; i++) {\n        array.push(HEAP32[(firstElement >> 2) + i]);\n      }\n      return array;\n    }\n    function replacePublicSymbol(name, value, numArguments) {\n      if (!Module.hasOwnProperty(name)) {\n        throwInternalError(\"Replacing nonexistant public symbol\");\n      }\n      if (\n        undefined !== Module[name].overloadTable &&\n        undefined !== numArguments\n      ) {\n        Module[name].overloadTable[numArguments] = value;\n      } else {\n        Module[name] = value;\n        Module[name].argCount = numArguments;\n      }\n    }\n    function dynCallLegacy(sig, ptr, args) {\n      var f = Module[\"dynCall_\" + sig];\n      return args && args.length\n        ? f.apply(null, [ptr].concat(args))\n        : f.call(null, ptr);\n    }\n    function dynCall(sig, ptr, args) {\n      if (sig.includes(\"j\")) {\n        return dynCallLegacy(sig, ptr, args);\n      }\n      return wasmTable.get(ptr).apply(null, args);\n    }\n    function getDynCaller(sig, ptr) {\n      var argCache = [];\n      return function () {\n        argCache.length = arguments.length;\n        for (var i = 0; i < arguments.length; i++) {\n          argCache[i] = arguments[i];\n        }\n        return dynCall(sig, ptr, argCache);\n      };\n    }\n    function embind__requireFunction(signature, rawFunction) {\n      signature = readLatin1String(signature);\n      function makeDynCaller() {\n        if (signature.includes(\"j\")) {\n          return getDynCaller(signature, rawFunction);\n        }\n        return wasmTable.get(rawFunction);\n      }\n      var fp = makeDynCaller();\n      if (typeof fp !== \"function\") {\n        throwBindingError(\n          \"unknown function pointer with signature \" +\n            signature +\n            \": \" +\n            rawFunction\n        );\n      }\n      return fp;\n    }\n    var UnboundTypeError = undefined;\n    function getTypeName(type) {\n      var ptr = ___getTypeName(type);\n      var rv = readLatin1String(ptr);\n      _free(ptr);\n      return rv;\n    }\n    function throwUnboundTypeError(message, types) {\n      var unboundTypes = [];\n      var seen = {};\n      function visit(type) {\n        if (seen[type]) {\n          return;\n        }\n        if (registeredTypes[type]) {\n          return;\n        }\n        if (typeDependencies[type]) {\n          typeDependencies[type].forEach(visit);\n          return;\n        }\n        unboundTypes.push(type);\n        seen[type] = true;\n      }\n      types.forEach(visit);\n      throw new UnboundTypeError(\n        message + \": \" + unboundTypes.map(getTypeName).join([\", \"])\n      );\n    }\n    function __embind_register_function(\n      name,\n      argCount,\n      rawArgTypesAddr,\n      signature,\n      rawInvoker,\n      fn\n    ) {\n      var argTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n      name = readLatin1String(name);\n      rawInvoker = embind__requireFunction(signature, rawInvoker);\n      exposePublicSymbol(\n        name,\n        function () {\n          throwUnboundTypeError(\n            \"Cannot call \" + name + \" due to unbound types\",\n            argTypes\n          );\n        },\n        argCount - 1\n      );\n      whenDependentTypesAreResolved([], argTypes, function (argTypes) {\n        var invokerArgsArray = [argTypes[0], null].concat(argTypes.slice(1));\n        replacePublicSymbol(\n          name,\n          craftInvokerFunction(name, invokerArgsArray, null, rawInvoker, fn),\n          argCount - 1\n        );\n        return [];\n      });\n    }\n    function integerReadValueFromPointer(name, shift, signed) {\n      switch (shift) {\n        case 0:\n          return signed\n            ? function readS8FromPointer(pointer) {\n                return HEAP8[pointer];\n              }\n            : function readU8FromPointer(pointer) {\n                return HEAPU8[pointer];\n              };\n        case 1:\n          return signed\n            ? function readS16FromPointer(pointer) {\n                return HEAP16[pointer >> 1];\n              }\n            : function readU16FromPointer(pointer) {\n                return HEAPU16[pointer >> 1];\n              };\n        case 2:\n          return signed\n            ? function readS32FromPointer(pointer) {\n                return HEAP32[pointer >> 2];\n              }\n            : function readU32FromPointer(pointer) {\n                return HEAPU32[pointer >> 2];\n              };\n        default:\n          throw new TypeError(\"Unknown integer type: \" + name);\n      }\n    }\n    function __embind_register_integer(\n      primitiveType,\n      name,\n      size,\n      minRange,\n      maxRange\n    ) {\n      name = readLatin1String(name);\n      if (maxRange === -1) {\n        maxRange = 4294967295;\n      }\n      var shift = getShiftFromSize(size);\n      var fromWireType = function (value) {\n        return value;\n      };\n      if (minRange === 0) {\n        var bitshift = 32 - 8 * size;\n        fromWireType = function (value) {\n          return (value << bitshift) >>> bitshift;\n        };\n      }\n      var isUnsignedType = name.includes(\"unsigned\");\n      registerType(primitiveType, {\n        name: name,\n        fromWireType: fromWireType,\n        toWireType: function (destructors, value) {\n          if (typeof value !== \"number\" && typeof value !== \"boolean\") {\n            throw new TypeError(\n              'Cannot convert \"' + _embind_repr(value) + '\" to ' + this.name\n            );\n          }\n          if (value < minRange || value > maxRange) {\n            throw new TypeError(\n              'Passing a number \"' +\n                _embind_repr(value) +\n                '\" from JS side to C/C++ side to an argument of type \"' +\n                name +\n                '\", which is outside the valid range [' +\n                minRange +\n                \", \" +\n                maxRange +\n                \"]!\"\n            );\n          }\n          return isUnsignedType ? value >>> 0 : value | 0;\n        },\n        argPackAdvance: 8,\n        readValueFromPointer: integerReadValueFromPointer(\n          name,\n          shift,\n          minRange !== 0\n        ),\n        destructorFunction: null,\n      });\n    }\n    function __embind_register_memory_view(rawType, dataTypeIndex, name) {\n      var typeMapping = [\n        Int8Array,\n        Uint8Array,\n        Int16Array,\n        Uint16Array,\n        Int32Array,\n        Uint32Array,\n        Float32Array,\n        Float64Array,\n      ];\n      var TA = typeMapping[dataTypeIndex];\n      function decodeMemoryView(handle) {\n        handle = handle >> 2;\n        var heap = HEAPU32;\n        var size = heap[handle];\n        var data = heap[handle + 1];\n        return new TA(buffer, data, size);\n      }\n      name = readLatin1String(name);\n      registerType(\n        rawType,\n        {\n          name: name,\n          fromWireType: decodeMemoryView,\n          argPackAdvance: 8,\n          readValueFromPointer: decodeMemoryView,\n        },\n        { ignoreDuplicateRegistrations: true }\n      );\n    }\n    function __embind_register_std_string(rawType, name) {\n      name = readLatin1String(name);\n      var stdStringIsUTF8 = name === \"std::string\";\n      registerType(rawType, {\n        name: name,\n        fromWireType: function (value) {\n          var length = HEAPU32[value >> 2];\n          var str;\n          if (stdStringIsUTF8) {\n            var decodeStartPtr = value + 4;\n            for (var i = 0; i <= length; ++i) {\n              var currentBytePtr = value + 4 + i;\n              if (i == length || HEAPU8[currentBytePtr] == 0) {\n                var maxRead = currentBytePtr - decodeStartPtr;\n                var stringSegment = UTF8ToString(decodeStartPtr, maxRead);\n                if (str === undefined) {\n                  str = stringSegment;\n                } else {\n                  str += String.fromCharCode(0);\n                  str += stringSegment;\n                }\n                decodeStartPtr = currentBytePtr + 1;\n              }\n            }\n          } else {\n            var a = new Array(length);\n            for (var i = 0; i < length; ++i) {\n              a[i] = String.fromCharCode(HEAPU8[value + 4 + i]);\n            }\n            str = a.join(\"\");\n          }\n          _free(value);\n          return str;\n        },\n        toWireType: function (destructors, value) {\n          if (value instanceof ArrayBuffer) {\n            value = new Uint8Array(value);\n          }\n          var getLength;\n          var valueIsOfTypeString = typeof value === \"string\";\n          if (\n            !(\n              valueIsOfTypeString ||\n              value instanceof Uint8Array ||\n              value instanceof Uint8ClampedArray ||\n              value instanceof Int8Array\n            )\n          ) {\n            throwBindingError(\"Cannot pass non-string to std::string\");\n          }\n          if (stdStringIsUTF8 && valueIsOfTypeString) {\n            getLength = function () {\n              return lengthBytesUTF8(value);\n            };\n          } else {\n            getLength = function () {\n              return value.length;\n            };\n          }\n          var length = getLength();\n          var ptr = _malloc(4 + length + 1);\n          HEAPU32[ptr >> 2] = length;\n          if (stdStringIsUTF8 && valueIsOfTypeString) {\n            stringToUTF8(value, ptr + 4, length + 1);\n          } else {\n            if (valueIsOfTypeString) {\n              for (var i = 0; i < length; ++i) {\n                var charCode = value.charCodeAt(i);\n                if (charCode > 255) {\n                  _free(ptr);\n                  throwBindingError(\n                    \"String has UTF-16 code units that do not fit in 8 bits\"\n                  );\n                }\n                HEAPU8[ptr + 4 + i] = charCode;\n              }\n            } else {\n              for (var i = 0; i < length; ++i) {\n                HEAPU8[ptr + 4 + i] = value[i];\n              }\n            }\n          }\n          if (destructors !== null) {\n            destructors.push(_free, ptr);\n          }\n          return ptr;\n        },\n        argPackAdvance: 8,\n        readValueFromPointer: simpleReadValueFromPointer,\n        destructorFunction: function (ptr) {\n          _free(ptr);\n        },\n      });\n    }\n    function __embind_register_std_wstring(rawType, charSize, name) {\n      name = readLatin1String(name);\n      var decodeString, encodeString, getHeap, lengthBytesUTF, shift;\n      if (charSize === 2) {\n        decodeString = UTF16ToString;\n        encodeString = stringToUTF16;\n        lengthBytesUTF = lengthBytesUTF16;\n        getHeap = function () {\n          return HEAPU16;\n        };\n        shift = 1;\n      } else if (charSize === 4) {\n        decodeString = UTF32ToString;\n        encodeString = stringToUTF32;\n        lengthBytesUTF = lengthBytesUTF32;\n        getHeap = function () {\n          return HEAPU32;\n        };\n        shift = 2;\n      }\n      registerType(rawType, {\n        name: name,\n        fromWireType: function (value) {\n          var length = HEAPU32[value >> 2];\n          var HEAP = getHeap();\n          var str;\n          var decodeStartPtr = value + 4;\n          for (var i = 0; i <= length; ++i) {\n            var currentBytePtr = value + 4 + i * charSize;\n            if (i == length || HEAP[currentBytePtr >> shift] == 0) {\n              var maxReadBytes = currentBytePtr - decodeStartPtr;\n              var stringSegment = decodeString(decodeStartPtr, maxReadBytes);\n              if (str === undefined) {\n                str = stringSegment;\n              } else {\n                str += String.fromCharCode(0);\n                str += stringSegment;\n              }\n              decodeStartPtr = currentBytePtr + charSize;\n            }\n          }\n          _free(value);\n          return str;\n        },\n        toWireType: function (destructors, value) {\n          if (!(typeof value === \"string\")) {\n            throwBindingError(\n              \"Cannot pass non-string to C++ string type \" + name\n            );\n          }\n          var length = lengthBytesUTF(value);\n          var ptr = _malloc(4 + length + charSize);\n          HEAPU32[ptr >> 2] = length >> shift;\n          encodeString(value, ptr + 4, length + charSize);\n          if (destructors !== null) {\n            destructors.push(_free, ptr);\n          }\n          return ptr;\n        },\n        argPackAdvance: 8,\n        readValueFromPointer: simpleReadValueFromPointer,\n        destructorFunction: function (ptr) {\n          _free(ptr);\n        },\n      });\n    }\n    function __embind_register_value_object(\n      rawType,\n      name,\n      constructorSignature,\n      rawConstructor,\n      destructorSignature,\n      rawDestructor\n    ) {\n      structRegistrations[rawType] = {\n        name: readLatin1String(name),\n        rawConstructor: embind__requireFunction(\n          constructorSignature,\n          rawConstructor\n        ),\n        rawDestructor: embind__requireFunction(\n          destructorSignature,\n          rawDestructor\n        ),\n        fields: [],\n      };\n    }\n    function __embind_register_value_object_field(\n      structType,\n      fieldName,\n      getterReturnType,\n      getterSignature,\n      getter,\n      getterContext,\n      setterArgumentType,\n      setterSignature,\n      setter,\n      setterContext\n    ) {\n      structRegistrations[structType].fields.push({\n        fieldName: readLatin1String(fieldName),\n        getterReturnType: getterReturnType,\n        getter: embind__requireFunction(getterSignature, getter),\n        getterContext: getterContext,\n        setterArgumentType: setterArgumentType,\n        setter: embind__requireFunction(setterSignature, setter),\n        setterContext: setterContext,\n      });\n    }\n    function __embind_register_void(rawType, name) {\n      name = readLatin1String(name);\n      registerType(rawType, {\n        isVoid: true,\n        name: name,\n        argPackAdvance: 0,\n        fromWireType: function () {\n          return undefined;\n        },\n        toWireType: function (destructors, o) {\n          return undefined;\n        },\n      });\n    }\n    var emval_symbols = {};\n    function getStringOrSymbol(address) {\n      var symbol = emval_symbols[address];\n      if (symbol === undefined) {\n        return readLatin1String(address);\n      } else {\n        return symbol;\n      }\n    }\n    function emval_get_global() {\n      if (typeof globalThis === \"object\") {\n        return globalThis;\n      }\n      return (function () {\n        return Function;\n      })()(\"return this\")();\n    }\n    function __emval_get_global(name) {\n      if (name === 0) {\n        return __emval_register(emval_get_global());\n      } else {\n        name = getStringOrSymbol(name);\n        return __emval_register(emval_get_global()[name]);\n      }\n    }\n    function __emval_incref(handle) {\n      if (handle > 4) {\n        emval_handle_array[handle].refcount += 1;\n      }\n    }\n    function requireRegisteredType(rawType, humanName) {\n      var impl = registeredTypes[rawType];\n      if (undefined === impl) {\n        throwBindingError(\n          humanName + \" has unknown type \" + getTypeName(rawType)\n        );\n      }\n      return impl;\n    }\n    function craftEmvalAllocator(argCount) {\n      var argsList = \"\";\n      for (var i = 0; i < argCount; ++i) {\n        argsList += (i !== 0 ? \", \" : \"\") + \"arg\" + i;\n      }\n      var functionBody =\n        \"return function emval_allocator_\" +\n        argCount +\n        \"(constructor, argTypes, args) {\\n\";\n      for (var i = 0; i < argCount; ++i) {\n        functionBody +=\n          \"var argType\" +\n          i +\n          \" = requireRegisteredType(Module['HEAP32'][(argTypes >>> 2) + \" +\n          i +\n          '], \"parameter ' +\n          i +\n          '\");\\n' +\n          \"var arg\" +\n          i +\n          \" = argType\" +\n          i +\n          \".readValueFromPointer(args);\\n\" +\n          \"args += argType\" +\n          i +\n          \"['argPackAdvance'];\\n\";\n      }\n      functionBody +=\n        \"var obj = new constructor(\" +\n        argsList +\n        \");\\n\" +\n        \"return __emval_register(obj);\\n\" +\n        \"}\\n\";\n      return new Function(\n        \"requireRegisteredType\",\n        \"Module\",\n        \"__emval_register\",\n        functionBody\n      )(requireRegisteredType, Module, __emval_register);\n    }\n    var emval_newers = {};\n    function requireHandle(handle) {\n      if (!handle) {\n        throwBindingError(\"Cannot use deleted val. handle = \" + handle);\n      }\n      return emval_handle_array[handle].value;\n    }\n    function __emval_new(handle, argCount, argTypes, args) {\n      handle = requireHandle(handle);\n      var newer = emval_newers[argCount];\n      if (!newer) {\n        newer = craftEmvalAllocator(argCount);\n        emval_newers[argCount] = newer;\n      }\n      return newer(handle, argTypes, args);\n    }\n    function _abort() {\n      abort();\n    }\n    function _emscripten_memcpy_big(dest, src, num) {\n      HEAPU8.copyWithin(dest, src, src + num);\n    }\n    function emscripten_realloc_buffer(size) {\n      try {\n        wasmMemory.grow((size - buffer.byteLength + 65535) >>> 16);\n        updateGlobalBufferAndViews(wasmMemory.buffer);\n        return 1;\n      } catch (e) {}\n    }\n    function _emscripten_resize_heap(requestedSize) {\n      var oldSize = HEAPU8.length;\n      requestedSize = requestedSize >>> 0;\n      var maxHeapSize = 2147483648;\n      if (requestedSize > maxHeapSize) {\n        return false;\n      }\n      for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n        var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown);\n        overGrownHeapSize = Math.min(\n          overGrownHeapSize,\n          requestedSize + 100663296\n        );\n        var newSize = Math.min(\n          maxHeapSize,\n          alignUp(Math.max(requestedSize, overGrownHeapSize), 65536)\n        );\n        var replacement = emscripten_realloc_buffer(newSize);\n        if (replacement) {\n          return true;\n        }\n      }\n      return false;\n    }\n    var ENV = {};\n    function getExecutableName() {\n      return thisProgram || \"./this.program\";\n    }\n    function getEnvStrings() {\n      if (!getEnvStrings.strings) {\n        var lang =\n          (\n            (typeof navigator === \"object\" &&\n              navigator.languages &&\n              navigator.languages[0]) ||\n            \"C\"\n          ).replace(\"-\", \"_\") + \".UTF-8\";\n        var env = {\n          USER: \"web_user\",\n          LOGNAME: \"web_user\",\n          PATH: \"/\",\n          PWD: \"/\",\n          HOME: \"/home/web_user\",\n          LANG: lang,\n          _: getExecutableName(),\n        };\n        for (var x in ENV) {\n          env[x] = ENV[x];\n        }\n        var strings = [];\n        for (var x in env) {\n          strings.push(x + \"=\" + env[x]);\n        }\n        getEnvStrings.strings = strings;\n      }\n      return getEnvStrings.strings;\n    }\n    var SYSCALLS = {\n      mappings: {},\n      buffers: [null, [], []],\n      printChar: function (stream, curr) {\n        var buffer = SYSCALLS.buffers[stream];\n        if (curr === 0 || curr === 10) {\n          (stream === 1 ? out : err)(UTF8ArrayToString(buffer, 0));\n          buffer.length = 0;\n        } else {\n          buffer.push(curr);\n        }\n      },\n      varargs: undefined,\n      get: function () {\n        SYSCALLS.varargs += 4;\n        var ret = HEAP32[(SYSCALLS.varargs - 4) >> 2];\n        return ret;\n      },\n      getStr: function (ptr) {\n        var ret = UTF8ToString(ptr);\n        return ret;\n      },\n      get64: function (low, high) {\n        return low;\n      },\n    };\n    function _environ_get(__environ, environ_buf) {\n      var bufSize = 0;\n      getEnvStrings().forEach(function (string, i) {\n        var ptr = environ_buf + bufSize;\n        HEAP32[(__environ + i * 4) >> 2] = ptr;\n        writeAsciiToMemory(string, ptr);\n        bufSize += string.length + 1;\n      });\n      return 0;\n    }\n    function _environ_sizes_get(penviron_count, penviron_buf_size) {\n      var strings = getEnvStrings();\n      HEAP32[penviron_count >> 2] = strings.length;\n      var bufSize = 0;\n      strings.forEach(function (string) {\n        bufSize += string.length + 1;\n      });\n      HEAP32[penviron_buf_size >> 2] = bufSize;\n      return 0;\n    }\n    function _exit(status) {\n      exit(status);\n    }\n    function _fd_close(fd) {\n      return 0;\n    }\n    function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {}\n    function _fd_write(fd, iov, iovcnt, pnum) {\n      var num = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAP32[(iov + i * 8) >> 2];\n        var len = HEAP32[(iov + (i * 8 + 4)) >> 2];\n        for (var j = 0; j < len; j++) {\n          SYSCALLS.printChar(fd, HEAPU8[ptr + j]);\n        }\n        num += len;\n      }\n      HEAP32[pnum >> 2] = num;\n      return 0;\n    }\n    function _setTempRet0(val) {\n      setTempRet0(val);\n    }\n    InternalError = Module[\"InternalError\"] = extendError(\n      Error,\n      \"InternalError\"\n    );\n    embind_init_charCodes();\n    BindingError = Module[\"BindingError\"] = extendError(Error, \"BindingError\");\n    init_emval();\n    UnboundTypeError = Module[\"UnboundTypeError\"] = extendError(\n      Error,\n      \"UnboundTypeError\"\n    );\n    var asmLibraryArg = {\n      B: ___cxa_thread_atexit,\n      l: __embind_finalize_value_object,\n      p: __embind_register_bigint,\n      y: __embind_register_bool,\n      x: __embind_register_emval,\n      i: __embind_register_float,\n      f: __embind_register_function,\n      c: __embind_register_integer,\n      b: __embind_register_memory_view,\n      j: __embind_register_std_string,\n      e: __embind_register_std_wstring,\n      m: __embind_register_value_object,\n      a: __embind_register_value_object_field,\n      z: __embind_register_void,\n      g: __emval_decref,\n      u: __emval_get_global,\n      k: __emval_incref,\n      n: __emval_new,\n      h: _abort,\n      r: _emscripten_memcpy_big,\n      d: _emscripten_resize_heap,\n      s: _environ_get,\n      t: _environ_sizes_get,\n      A: _exit,\n      w: _fd_close,\n      o: _fd_seek,\n      v: _fd_write,\n      q: _setTempRet0,\n    };\n    var asm = createWasm(binaryFile);\n    var ___wasm_call_ctors = (Module[\"___wasm_call_ctors\"] = function () {\n      return (___wasm_call_ctors = Module[\"___wasm_call_ctors\"] =\n        Module[\"asm\"][\"D\"]).apply(null, arguments);\n    });\n    var _malloc = (Module[\"_malloc\"] = function () {\n      return (_malloc = Module[\"_malloc\"] = Module[\"asm\"][\"E\"]).apply(\n        null,\n        arguments\n      );\n    });\n    var _free = (Module[\"_free\"] = function () {\n      return (_free = Module[\"_free\"] = Module[\"asm\"][\"F\"]).apply(\n        null,\n        arguments\n      );\n    });\n    var ___getTypeName = (Module[\"___getTypeName\"] = function () {\n      return (___getTypeName = Module[\"___getTypeName\"] =\n        Module[\"asm\"][\"G\"]).apply(null, arguments);\n    });\n    var ___embind_register_native_and_builtin_types = (Module[\n      \"___embind_register_native_and_builtin_types\"\n    ] = function () {\n      return (___embind_register_native_and_builtin_types = Module[\n        \"___embind_register_native_and_builtin_types\"\n      ] =\n        Module[\"asm\"][\"H\"]).apply(null, arguments);\n    });\n    var dynCall_jiji = (Module[\"dynCall_jiji\"] = function () {\n      return (dynCall_jiji = Module[\"dynCall_jiji\"] = Module[\"asm\"][\"J\"]).apply(\n        null,\n        arguments\n      );\n    });\n    var calledRun;\n    function ExitStatus(status) {\n      this.name = \"ExitStatus\";\n      this.message = \"Program terminated with exit(\" + status + \")\";\n      this.status = status;\n    }\n    dependenciesFulfilled = function runCaller() {\n      if (!calledRun) run();\n      if (!calledRun) dependenciesFulfilled = runCaller;\n    };\n    function run(args) {\n      args = args || arguments_;\n      if (runDependencies > 0) {\n        return;\n      }\n      preRun();\n      if (runDependencies > 0) {\n        return;\n      }\n      function doRun() {\n        if (calledRun) return;\n        calledRun = true;\n        Module[\"calledRun\"] = true;\n        if (ABORT) return;\n        initRuntime();\n        readyPromiseResolve(Module);\n        if (Module[\"onRuntimeInitialized\"]) Module[\"onRuntimeInitialized\"]();\n        postRun();\n      }\n      if (Module[\"setStatus\"]) {\n        Module[\"setStatus\"](\"Running...\");\n        setTimeout(function () {\n          setTimeout(function () {\n            Module[\"setStatus\"](\"\");\n          }, 1);\n          doRun();\n        }, 1);\n      } else {\n        doRun();\n      }\n    }\n    Module[\"run\"] = run;\n    function exit(status, implicit) {\n      EXITSTATUS = status;\n      if (implicit && keepRuntimeAlive() && status === 0) {\n        return;\n      }\n      if (keepRuntimeAlive()) {\n      } else {\n        exitRuntime();\n        if (Module[\"onExit\"]) Module[\"onExit\"](status);\n        ABORT = true;\n      }\n      quit_(status, new ExitStatus(status));\n    }\n    if (Module[\"preInit\"]) {\n      if (typeof Module[\"preInit\"] == \"function\")\n        Module[\"preInit\"] = [Module[\"preInit\"]];\n      while (Module[\"preInit\"].length > 0) {\n        Module[\"preInit\"].pop()();\n      }\n    }\n    run();\n\n    return Module.ready;\n  };\n})();\nexport default Module;\n","export const enum MozJpegColorSpace {\n  GRAYSCALE = 1,\n  RGB,\n  YCbCr,\n}\n","import init, {\n  MozJPEGModule,\n  EncodeOptions,\n} from '../../../../../mozjpeg/enc/mozjpeg_enc'\nimport { MozJpegColorSpace } from '../../../../../mozjpeg/enc/mozjpeg-color-space'\nimport { urlFromString } from '../util'\n\nexport type IMozjpegOptions = EncodeOptions\n\nexport const defaultMozjpegOptions: EncodeOptions = {\n  quality: 75,\n  baseline: false,\n  arithmetic: false,\n  progressive: true,\n  optimize_coding: true,\n  smoothing: 0,\n  color_space: MozJpegColorSpace.YCbCr,\n  quant_table: 3,\n  trellis_multipass: false,\n  trellis_opt_zero: false,\n  trellis_opt_table: false,\n  trellis_loops: 1,\n  auto_subsample: true,\n  chroma_subsample: 2,\n  separate_chroma_quality: false,\n  chroma_quality: 75,\n}\n\nlet mozjpeg: MozJPEGModule\n\nexport const initMozjpeg = async (mozjpegWasm: string | undefined) => {\n  if (!mozjpeg) {\n    mozjpeg = await init({}, urlFromString(mozjpegWasm))\n  }\n}\n\nexport const optimizeMozjpeg = (image: ImageData, options: IMozjpegOptions) => {\n  const result = mozjpeg.encode(image.data, image.width, image.height, options)\n  return result\n}\n","let wasm;\n\nconst cachedTextDecoder =\n  typeof TextDecoder !== \"undefined\"\n    ? new TextDecoder(\"utf-8\", { ignoreBOM: true, fatal: true })\n    : {\n        decode: () => {\n          throw Error(\"TextDecoder not available\");\n        },\n      };\n\nif (typeof TextDecoder !== \"undefined\") {\n  cachedTextDecoder.decode();\n}\n\nlet cachedUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n  if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {\n    cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n  }\n  return cachedUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n  ptr = ptr >>> 0;\n  return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nfunction passArray8ToWasm0(arg, malloc) {\n  const ptr = malloc(arg.length * 1, 1) >>> 0;\n  getUint8Memory0().set(arg, ptr / 1);\n  WASM_VECTOR_LEN = arg.length;\n  return ptr;\n}\n\nlet cachedInt32Memory0 = null;\n\nfunction getInt32Memory0() {\n  if (cachedInt32Memory0 === null || cachedInt32Memory0.byteLength === 0) {\n    cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n  }\n  return cachedInt32Memory0;\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n  ptr = ptr >>> 0;\n  return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n/**\n * @param {Uint8Array} data\n * @param {number} level\n * @param {boolean} interlace\n * @returns {Uint8Array}\n */\nexport function optimize(data, level, interlace) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    const ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);\n    const len0 = WASM_VECTOR_LEN;\n    wasm.optimize(retptr, ptr0, len0, level, interlace);\n    var r0 = getInt32Memory0()[retptr / 4 + 0];\n    var r1 = getInt32Memory0()[retptr / 4 + 1];\n    var v2 = getArrayU8FromWasm0(r0, r1).slice();\n    wasm.__wbindgen_free(r0, r1 * 1, 1);\n    return v2;\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\n\nasync function __wbg_load(module, imports) {\n  if (typeof Response === \"function\" && module instanceof Response) {\n    if (typeof WebAssembly.instantiateStreaming === \"function\") {\n      try {\n        return await WebAssembly.instantiateStreaming(module, imports);\n      } catch (e) {\n        if (module.headers.get(\"Content-Type\") != \"application/wasm\") {\n          console.warn(\n            \"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\",\n            e\n          );\n        } else {\n          throw e;\n        }\n      }\n    }\n\n    const bytes = await module.arrayBuffer();\n    return await WebAssembly.instantiate(bytes, imports);\n  } else {\n    const instance = await WebAssembly.instantiate(module, imports);\n\n    if (instance instanceof WebAssembly.Instance) {\n      return { instance, module };\n    } else {\n      return instance;\n    }\n  }\n}\n\nfunction __wbg_get_imports() {\n  const imports = {};\n  imports.wbg = {};\n  imports.wbg.__wbindgen_throw = function (arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n  };\n\n  return imports;\n}\n\nfunction __wbg_init_memory(imports, maybe_memory) {}\n\nfunction __wbg_finalize_init(instance, module) {\n  wasm = instance.exports;\n  __wbg_init.__wbindgen_wasm_module = module;\n  cachedInt32Memory0 = null;\n  cachedUint8Memory0 = null;\n\n  return wasm;\n}\n\nfunction initSync(module) {\n  if (wasm !== undefined) return wasm;\n\n  const imports = __wbg_get_imports();\n\n  __wbg_init_memory(imports);\n\n  if (!(module instanceof WebAssembly.Module)) {\n    module = new WebAssembly.Module(module);\n  }\n\n  const instance = new WebAssembly.Instance(module, imports);\n\n  return __wbg_finalize_init(instance, module);\n}\n\nasync function __wbg_init(input) {\n  if (wasm !== undefined) return wasm;\n\n  if (typeof input === \"undefined\") {\n    throw new Error(\"oxipng WASM missing\");\n  }\n  const imports = __wbg_get_imports();\n\n  if (\n    typeof input === \"string\" ||\n    (typeof Request === \"function\" && input instanceof Request) ||\n    (typeof URL === \"function\" && input instanceof URL)\n  ) {\n    input = fetch(input);\n  }\n\n  __wbg_init_memory(imports);\n\n  const { instance, module } = await __wbg_load(await input, imports);\n\n  return __wbg_finalize_init(instance, module);\n}\n\nexport { initSync };\nexport default __wbg_init;\n","import init, { optimize, InitOutput } from '../../../../../oxipng/pkg/image_opt'\nimport { urlFromString } from '../util'\n\nexport interface IOxipngOptions {\n  level?: number\n  interlace?: boolean\n}\n\nlet oxipng: InitOutput\n\nexport const initOxipng = async (oxipngWasm: string | undefined) => {\n  if (!oxipng) {\n    oxipng = await init(urlFromString(oxipngWasm))\n  }\n}\n\nexport const optimizeOxipng = (buffer: ArrayBuffer, options?: IOxipngOptions) => {\n  const array = new Uint8Array(buffer)\n  const result = optimize(array, options?.level ?? 3, options?.interlace ?? false)\n  return result\n}\n","import { OptimizeInitOptions } from './optimize-options'\n\nexport interface WorkerFileData {\n  buffer?: ArrayBuffer\n  data?: ImageData\n}\n\nexport interface WorkerCommand {\n  init: OptimizeInitOptions\n  file?: WorkerFileData\n  options?: unknown\n}\n\nexport interface WorkerResult {\n  type: WorkerResultType\n  output?: unknown\n}\n\nexport enum WorkerResultType {\n  Complete = 'complete',\n  Error = 'error',\n}\n","import { WorkerCommand, WorkerFileData, WorkerResultType } from './worker-enum'\nimport { IOxipngOptions, initOxipng, optimizeOxipng } from './oxipng'\nimport { AssetContentType } from '../util'\nimport { IMozjpegOptions, initMozjpeg, optimizeMozjpeg } from './mozjpeg'\n\nself.onmessage = async (e: MessageEvent<WorkerCommand>) => {\n  const { file, init, options } = (e.data ?? {}) as WorkerCommand\n  if (!file) {\n    return\n  }\n  const { buffer, data } = file\n  switch (init.assetType) {\n    case AssetContentType.Png:\n      try {\n        if (!buffer) {\n          self.postMessage({ type: WorkerResultType.Error, output: 'Invalid PNG data' })\n          return\n        }\n        await initOxipng(init.oxipngWasm)\n        const opts = options as IOxipngOptions | undefined\n        const result = optimizeOxipng(buffer, opts)\n        self.postMessage({ type: WorkerResultType.Complete, output: result })\n      } catch (e) {\n        self.postMessage({ type: WorkerResultType.Error, output: e })\n      }\n      break\n    case AssetContentType.Jpeg:\n      try {\n        if (!data) {\n          self.postMessage({ type: WorkerResultType.Error, output: 'Invalid JPG data' })\n          return\n        }\n        await initMozjpeg(init.mozjpegWasm)\n        const opts = options as IMozjpegOptions\n        const result = optimizeMozjpeg(data, opts)\n        self.postMessage({ type: WorkerResultType.Complete, output: result })\n      } catch (e) {\n        self.postMessage({ type: WorkerResultType.Error, output: e })\n      }\n      break\n    default:\n      console.log('Error: unknown worker command', e.data)\n      self.postMessage({ type: WorkerResultType.Error, output: 'Unknown command' })\n  }\n}\n\nexport {}\n","import { ValidatedFile } from '../util'\nimport { WasmInitOptions } from './optimize-options'\nimport { optimizeImageWrap } from './optimize-wrap'\nimport { WorkerResult, WorkerResultType, WorkerCommand } from './worker-enum'\n\n// Avoids CORS issue, see https://github.com/vitejs/vite/issues/13680\nconst workerHack = (url: string) => {\n  const js = `import ${JSON.stringify(new URL(url))}`\n  const blob = new Blob([js], { type: 'application/javascript' })\n\n  const objURL = URL.createObjectURL(blob)\n  const worker = new Worker(objURL, { type: 'module', name: 'optimize-worker' })\n  worker.addEventListener('error', (e) => {\n    URL.revokeObjectURL(objURL)\n  })\n  return worker\n}\n\n// Optimizes an image using web workers, if available\nexport const optimizeImage = async (\n  file: ValidatedFile,\n  workerUrl: string | undefined,\n  wasmInit: WasmInitOptions,\n  options: Record<string, unknown>,\n): Promise<Uint8Array | undefined> => {\n  const buffer = await file.file.arrayBuffer()\n\n  if (workerUrl && window.Worker) {\n    return new Promise((resolve, reject) => {\n      const worker = workerHack(workerUrl)\n      worker.onmessage = (e: MessageEvent<WorkerResult>) => {\n        switch (e.data.type) {\n          case WorkerResultType.Complete:\n            resolve(e.data.output as Uint8Array)\n            break\n          default:\n            reject(e.data.output || 'Worker failed to optimize')\n        }\n      }\n      const opt = { ...options }\n      const command: WorkerCommand = {\n        init: {\n          ...wasmInit,\n          assetType: file.type,\n        },\n        file: {\n          buffer,\n          data: file.data,\n        },\n        options: opt,\n      }\n      worker.postMessage(command)\n    })\n  } else {\n    return optimizeImageWrap(file, file.type, options)\n  }\n}\n","import { AssetContentType, ValidatedFile } from '../util'\nimport {\n  IMozjpegOptions,\n  defaultMozjpegOptions,\n  initMozjpeg,\n  optimizeMozjpeg,\n} from './mozjpeg'\nimport { OptimizeInitOptions } from './optimize-options'\nimport { IOxipngOptions, initOxipng, optimizeOxipng } from './oxipng'\n\nexport const optimizeInitWrap = (options: OptimizeInitOptions) => {\n  const { assetType, mozjpegWasm, oxipngWasm } = options\n  if (assetType === AssetContentType.Png) {\n    return initOxipng(oxipngWasm)\n  } else if (assetType === AssetContentType.Jpeg) {\n    return initMozjpeg(mozjpegWasm)\n  }\n}\n\nexport const optimizeImageWrap = async (\n  validFile: ValidatedFile,\n  assetType: AssetContentType,\n  options: unknown,\n): Promise<Uint8Array | undefined> => {\n  const { data, file } = validFile\n  if (assetType === AssetContentType.Png) {\n    const array = new Uint8Array(await file.arrayBuffer())\n    return optimizeOxipng(array, options as IOxipngOptions)\n  } else if (assetType == AssetContentType.Jpeg) {\n    return optimizeMozjpeg(data, options as IMozjpegOptions)\n  }\n}\n\nexport const getDefaultOptions = (file: ValidatedFile): Record<string, unknown> => {\n  if (file.type === AssetContentType.Png) {\n    const options: IOxipngOptions = { level: 3 }\n    return options as Record<string, unknown>\n  } else if (file.type === AssetContentType.Jpeg) {\n    const options: IMozjpegOptions = {\n      ...defaultMozjpegOptions,\n    }\n    return options as unknown as Record<string, unknown>\n  }\n  return {}\n}\n","<template>\n  <div ref=\"wrapper\" class=\"o-spinner\">\n    <span class=\"dot\" />\n    <span class=\"dot\" />\n    <span class=\"dot\" />\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { ref, Ref } from 'vue'\n\nexport interface ISpinner {\n  wrapper: Ref<HTMLDivElement | undefined>\n}\n\nwithDefaults(\n  defineProps<{\n    size?: number\n    color?: string\n  }>(),\n  {\n    size: 10,\n    color: '#fff',\n  },\n)\n\nconst wrapper = ref<HTMLDivElement>()\n\n// expose the root element of spinner for ImageLoader\ndefineExpose<ISpinner>({ wrapper })\n</script>\n\n<style lang=\"postcss\">\n.o-spinner {\n  display: inline-flex;\n  align-items: center;\n  .dot {\n    width: v-bind(size + 'px');\n    height: v-bind(size + 'px');\n    border-radius: 50%;\n    background-color: v-bind(color);\n    animation: scale 0.6s ease alternate infinite;\n    &:not(:first-child) {\n      margin-left: calc(v-bind(size + 'px') / 4);\n    }\n    &:nth-of-type(2) {\n      animation-delay: 0.2s;\n    }\n    &:nth-of-type(3) {\n      animation-delay: 0.4s;\n    }\n  }\n  @keyframes scale {\n    0% {\n      transform: scale(0);\n    }\n    100% {\n      transform: scale(1);\n    }\n  }\n}\n</style>\n","<template>\n  <div :class=\"{ 'o-upload-wrap': true, dragging }\" :style=\"{ width, height }\">\n    <form\n      :id=\"id\"\n      class=\"o-upload-form\"\n      action=\"\"\n      enctype=\"multipart/form-data\"\n      @drop=\"dropUploadImage\"\n      @dragenter=\"dragStart\"\n      @dragleave=\"dragEnd\"\n      @dragend=\"dragEnd\"\n      @input=\"handleFileSelect\"\n    >\n      <label class=\"o-upload-area\" :for=\"`image-upload-input${id}`\">\n        <slot>\n          <div v-if=\"!loading\" class=\"o-upload-button\" :class=\"{ 'has-file': !!preview }\">\n            <div class=\"o-upload-left\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"32\"\n                height=\"32\"\n                viewBox=\"0 0 32 32\"\n                class=\"o-upload-image\"\n              >\n                <path\n                  fill=\"currentColor\"\n                  d=\"m6 18l1.41 1.41L15 11.83V30h2V11.83l7.59 7.58L26 18L16 8L6 18zM6 8V4h20v4h2V4a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v4z\"\n                />\n              </svg>\n              <Image v-if=\"preview\" :asset=\"preview\" class=\"o-upload-background\" />\n            </div>\n            <div class=\"o-upload-right\">\n              <div class=\"o-upload-title\">\n                {{ title }}\n              </div>\n              <div class=\"o-upload-subtitle\" v-html=\"subtitle\" />\n            </div>\n          </div>\n        </slot>\n        <div v-if=\"loading\" class=\"o-upload-spinner\">\n          <Spinner :size=\"24\" color=\"#3a86ff\" />\n        </div>\n      </label>\n      <input\n        :id=\"`o-upload-input${id}`\"\n        class=\"o-upload\"\n        type=\"file\"\n        :accept=\"accept\"\n        :disabled=\"isDisabled\"\n        @click=\"clickInputFile\"\n      />\n    </form>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { ref } from 'vue'\nimport Spinner from './Spinner.vue'\nimport Image from './Image.vue'\n\nwithDefaults(\n  defineProps<{\n    id?: string\n    title?: string\n    subtitle?: string\n    isDisabled?: boolean\n    preview?: string | null\n    loading?: boolean\n    accept?: string\n    width?: string\n    height?: string\n  }>(),\n  {\n    id: '',\n    title: undefined,\n    subtitle: undefined,\n    isDisabled: false,\n    preview: null,\n    loading: false,\n    accept: 'image/*',\n    width: '100%',\n    height: '182px',\n  },\n)\nconst emit = defineEmits<{\n  (e: 'file-select', value: File): void\n}>()\n\nconst dragging = ref(false)\nconst selectedFile = ref<File>()\n\nconst handleFileSelect = (e: InputEvent | Event) => {\n  if (e && e.target && e.type === 'input') {\n    const files = (e.target as HTMLInputElement).files\n    if (files) {\n      selectedFile.value = files[0]\n      emit('file-select', selectedFile.value)\n    }\n  } else if (e && e.type === 'drop') {\n    const files = (e as InputEvent).dataTransfer?.files\n    if (files) {\n      selectedFile.value = files[0]\n      emit('file-select', selectedFile.value)\n    }\n  }\n  dragging.value = false\n}\nconst dragStart = (e: Event) => {\n  e.preventDefault()\n  dragging.value = true\n}\nconst dragEnd = (e: Event) => {\n  e.preventDefault()\n  dragging.value = false\n}\nconst dropUploadImage = (e: Event) => {\n  e.preventDefault()\n  handleFileSelect(e)\n}\nconst clickInputFile = (e: MouseEvent) => {\n  if (e && e.target) {\n    ;(e.target as HTMLInputElement).value = ''\n  }\n}\n</script>\n\n<style lang=\"postcss\">\n$outline: #bdbfc2;\n$blue-500: #3a86ff;\n\n.o-upload-wrap {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid $outline;\n}\n.o-upload-form {\n  position: relative;\n  height: 100%;\n  width: 100%;\n}\n.o-upload-background {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: transparent;\n  background-size: contain;\n  background-position: center;\n  padding: 0;\n}\n.o-upload {\n  cursor: pointer;\n  opacity: 0;\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n}\n.o-upload-button {\n  display: flex;\n  flex-direction: row;\n  color: black;\n  text-align: left;\n  pointer-events: none;\n  font-size: 16px;\n  line-height: 22px;\n  font-weight: 300;\n}\n.o-upload-left {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 50%;\n  border-right: 1px solid $outline;\n  position: relative;\n}\n.o-upload-image {\n  position: absolute;\n}\n.o-upload-right {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  padding: 0 40px;\n  width: 50%;\n}\n.o-upload-title {\n  font-weight: 600;\n}\n.o-upload-subtitle {\n  align-items: center;\n  font-size: 10px;\n  line-height: 16px;\n  font-weight: 300;\n  display: inline;\n  margin-top: 8px;\n  span {\n    margin: 0 3px;\n    color: $blue-500;\n  }\n}\n&.has-file {\n  border: $blue-500;\n}\n&.dragging {\n  border-color: $blue-500;\n  .file-upload-left {\n    border-color: $blue-500;\n  }\n}\n.o-upload-spinner {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n}\n.o-upload-button,\n.o-upload-spinner {\n  z-index: 10;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  .loader {\n    margin: 0;\n  }\n  img {\n    width: 32px;\n    margin-bottom: 6px;\n  }\n}\n</style>\n","<template>\n  <button\n    :class=\"['o-button', disabled && 'disabled']\"\n    :disabled=\"disabled\"\n    @click=\"click\"\n  >\n    <div v-if=\"animate\" class=\"o-animate\">\n      <Spinner class=\"o-spinner\" />\n    </div>\n    <div v-else>\n      {{ text }}\n    </div>\n    <div v-if=\"animate\" class=\"o-hidden\">\n      {{ text }}\n    </div>\n  </button>\n</template>\n\n<script lang=\"ts\" setup>\nimport { toRefs } from 'vue'\nimport Spinner from './Spinner.vue'\n\nconst emit = defineEmits(['click'])\n\nconst props = withDefaults(\n  defineProps<{\n    text?: string\n    disabled?: boolean\n    animate?: boolean\n  }>(),\n  {\n    text: '',\n    disabled: false,\n    animate: false,\n  },\n)\nconst { disabled } = toRefs(props)\n\nconst click = (e: Event) => {\n  if (!disabled.value) {\n    emit('click', e)\n  }\n}\n</script>\n\n<style lang=\"postcss\">\n$bg-color: #3a86ff;\n\n.o-button {\n  font-weight: 500;\n  font-size: 15px;\n  letter-spacing: 1.5px;\n  margin-top: 12px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  text-align: center;\n  border-radius: 6px;\n  transition: background-color 0.15s ease;\n  min-width: 100px;\n  position: relative;\n  height: 38px;\n  padding: 0 32px;\n  background-color: $bg-color;\n  color: white;\n  &:hover:not(:disabled) {\n    background-color: rgba($bg-color, 0.9);\n  }\n  &:focus:not(:disabled) {\n    box-shadow: none;\n    background-color: rgba($bg-color, 0.8);\n  }\n  &.disabled {\n    background-color: #9e9ea1;\n    color: white;\n    cursor: not-allowed;\n    user-select: none;\n  }\n  .o-hidden {\n    visibility: hidden;\n  }\n\n  .o-animate {\n    width: 100%;\n    height: 100%;\n    position: absolute;\n  }\n  .o-spinner {\n    position: absolute;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    left: 0;\n    top: 0;\n    right: 0;\n    bottom: 0;\n  }\n}\n</style>\n","<template>\n  <div class=\"optimizer\">\n    <div class=\"opt-wrap\">\n      <UploadFile\n        title=\"Upload PNG/JPEG\"\n        subtitle=\"Drag or click here\"\n        accept=\"image/png,image/jpeg\"\n        :preview=\"assetBase64\"\n        @fileSelect=\"updateAsset\"\n      />\n    </div>\n    <div v-if=\"error\" class=\"error\">\n      {{ getError(error) }}\n    </div>\n    <OButton\n      text=\"Optimize\"\n      :animate=\"loading\"\n      :disabled=\"!validatedFile?.file\"\n      @click=\"confirmOptimize\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { ref, toRefs } from 'vue'\nimport {\n  validateMedia,\n  IValidateMediaError,\n  ValidatedFile,\n  CONTENT_TYPES,\n  saveFile,\n} from '../util'\nimport { optimizeInitWrap, optimizeImage, getDefaultOptions } from '../optimize'\nimport UploadFile from './UploadFile.vue'\nimport OButton from './OButton.vue'\nimport { WasmInitOptions } from '../optimize/optimize-options'\n\nconst error = ref()\nconst assetBase64 = ref('')\nconst loading = ref(false)\nconst validatedFile = ref<ValidatedFile | undefined>()\nconst imageOptions = ref<Record<string, unknown>>({})\n\nconst props = defineProps<{\n  mozjpegWasm: string\n  oxipngWasm: string\n  workerUrl: string\n}>()\nconst { mozjpegWasm, oxipngWasm, workerUrl } = toRefs(props)\n\nconst wasmInit = (): WasmInitOptions => {\n  return {\n    mozjpegWasm: mozjpegWasm.value,\n    oxipngWasm: oxipngWasm.value,\n  }\n}\n\nconst ErrorMap: Record<string, string> = {\n  FILE_TYPE: 'Unsupported file type',\n  unknown: 'Unknown error occurred',\n}\n\nconst getError = (key: string): string => {\n  return ErrorMap[key] ?? ErrorMap.unknown\n}\n\nconst handleImageSelect = (validFile: ValidatedFile) => {\n  const reader = new FileReader()\n  reader.readAsDataURL(validFile.file)\n  reader.onload = () => {\n    assetBase64.value = reader.result?.toString() ?? ''\n  }\n  validatedFile.value = validFile\n}\n\nconst updateAsset = async (file: File | null | undefined) => {\n  if (file) {\n    validatedFile.value = undefined\n    error.value = undefined\n    try {\n      const validFile = await validateMedia(\n        { size: 10000000, types: CONTENT_TYPES },\n        file,\n      )\n      handleImageSelect(validFile)\n      loading.value = true\n      await optimizeInitWrap({ ...wasmInit(), assetType: validFile.type })\n      imageOptions.value = getDefaultOptions(validFile)\n      loading.value = false\n    } catch (e) {\n      console.log(e)\n      const key = (e as IValidateMediaError).fileErrors[0]\n      error.value = key\n    }\n  }\n}\n\nconst confirmOptimize = async () => {\n  const file = validatedFile.value\n  if (!loading.value && !error.value && file) {\n    loading.value = true\n    try {\n      const result = await optimizeImage(\n        file,\n        workerUrl.value,\n        wasmInit(),\n        imageOptions.value,\n      )\n      if (result) {\n        saveFile(file.file.name || 'opt.png', result, file.type)\n      } else {\n        error.value = ''\n      }\n    } catch (e) {\n      console.log('Optimize error:', e)\n    }\n    loading.value = false\n  }\n}\n</script>\n\n<style lang=\"postcss\" scoped>\n.optimizer {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n.opt-wrap {\n  width: 480px;\n  max-width: 95%;\n}\n</style>\n","export const saveFile = (\n  filename: string,\n  data: string | Uint8Array,\n  fileType: string,\n) => {\n  const blob = new Blob([data], { type: fileType })\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const navAny = window.navigator as any\n  if (navAny.msSaveOrOpenBlob) {\n    navAny.msSaveBlob(blob, filename)\n  } else {\n    const elem = window.document.createElement('a')\n    elem.href = window.URL.createObjectURL(blob)\n    elem.download = filename\n    document.body.appendChild(elem)\n    elem.click()\n    document.body.removeChild(elem)\n  }\n}\n","import './optimize/optimize-worker?worker'\nimport { Optimizer } from './components'\n\nwindow.Optimizer = Optimizer\n\nexport { Optimizer }\n"],"names":["props","__props","asset","contentHash","toRefs","url","computed","hash","value","AssetContentType","CONTENT_TYPES","Object","values","async","blobToImg","blob","URL","createObjectURL","img","Image","decoding","src","loaded","Promise","resolve","reject","onload","onerror","Error","decode","catch","revokeObjectURL","builtinDecode","file","drawable","self","createImageBitmap","width","height","sw","sh","canvas","document","createElement","ctx","getContext","drawImage","getImageData","urlFromString","str","_scriptDir","Module","binaryFile","readyPromiseResolve","readyPromiseReject","key","moduleOverrides","hasOwnProperty","readBinary","thisProgram","quit_","status","toThrow","ENVIRONMENT_IS_WORKER","scriptDirectory","location","href","indexOf","substr","lastIndexOf","xhr","XMLHttpRequest","open","responseType","send","Uint8Array","response","wasmBinary","out","console","log","bind","err","warn","wasmMemory","noExitRuntime","WebAssembly","abort","ABORT","UTF8Decoder","TextDecoder","UTF8ToString","ptr","maxBytesToRead","maxPtr","end","HEAPU8","subarray","buffer","HEAP8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAPF64","wasmTable","UTF16Decoder","UTF16ToString","endPtr","idx","maxIdx","stringToUTF16","outPtr","maxBytesToWrite","startPtr","numCharsToWrite","length","i","codeUnit","charCodeAt","lengthBytesUTF16","UTF32ToString","utf32","ch","String","fromCharCode","stringToUTF32","undefined","lengthBytesUTF32","len","updateGlobalBufferAndViews","buf","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Float32Array","Float64Array","wasmBinaryFile","path","__ATPRERUN__","__ATINIT__","__ATPOSTRUN__","runDependencies","dependenciesFulfilled","what","e","RuntimeError","getBinary","callRuntimeCallbacks","callbacks","callback","shift","func","arg","get","startsWith","runtimeKeepaliveCounter","structRegistrations","runDestructors","destructors","pop","del","simpleReadValueFromPointer","pointer","this","awaitingDependencies","registeredTypes","typeDependencies","char_0","char_9","makeLegalFunctionName","name","f","replace","createNamedFunction","body","Function","extendError","baseErrorType","errorName","errorClass","message","stack","toString","prototype","create","constructor","InternalError","throwInternalError","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","onComplete","typeConverters","myTypeConverters","registerType","forEach","type","Array","unregisteredTypes","registered","dt","push","getShiftFromSize","size","TypeError","embind_charCodes","readLatin1String","ret","c","BindingError","throwBindingError","rawType","registeredInstance","options","ignoreDuplicateRegistrations","cb","emval_free_list","emval_handle_array","__emval_decref","handle","refcount","count_emval_handles","count","get_first_emval","__emval_register","_embind_repr","v","t","floatReadValueFromPointer","craftInvokerFunction","humanName","argTypes","classType","cppInvokerFunc","cppTargetFunc","argCount","isClassMethodFunc","needsDestructorStack","destructorFunction","returns","argsList","argsListWired","invokerFnBody","dtorStack","args1","args2","paramName","argumentList","dummy","obj","r","apply","exposePublicSymbol","numArguments","overloadTable","proto","methodName","prevFunc","arguments","dynCall","sig","args","includes","concat","call","embind__requireFunction","signature","rawFunction","argCache","fp","UnboundTypeError","getTypeName","___getTypeName","rv","_free","integerReadValueFromPointer","signed","emval_symbols","emval_get_global","globalThis","requireRegisteredType","impl","emval_newers","emscripten_realloc_buffer","grow","byteLength","ENV","getEnvStrings","strings","env","USER","LOGNAME","PATH","PWD","HOME","LANG","navigator","languages","_","x","SYSCALLS","mappings","buffers","printChar","stream","curr","heap","endIdx","slice","varargs","getStr","get64","low","high","codes","asmLibraryArg","B","a0","a1","l","structType","reg","rawConstructor","rawDestructor","fieldRecords","fields","map","field","getterReturnType","setterArgumentType","fieldTypes","fieldName","getter","getterContext","setter","setterContext","read","write","o","fromWireType","toWireType","argPackAdvance","readValueFromPointer","p","primitiveType","minRange","maxRange","y","trueValue","falseValue","wt","rawArgTypesAddr","rawInvoker","fn","firstElement","array","types","unboundTypes","seen","visit","join","invokerArgsArray","bitshift","isUnsignedType","b","dataTypeIndex","TA","decodeMemoryView","data","j","stdStringIsUTF8","decodeStartPtr","currentBytePtr","stringSegment","a","getLength","ArrayBuffer","valueIsOfTypeString","Uint8ClampedArray","u","_malloc","outIdx","charCode","charSize","decodeString","encodeString","getHeap","lengthBytesUTF","HEAP","m","constructorSignature","destructorSignature","getterSignature","setterSignature","z","isVoid","g","symbol","address","k","n","newer","functionBody","h","dest","num","copyWithin","d","requestedSize","multiple","oldSize","maxHeapSize","cutDown","overGrownHeapSize","Math","min","max","s","__environ","environ_buf","bufSize","string","dontAddNull","penviron_count","penviron_buf_size","A","implicit","ExitStatus","w","fd","offset_low","offset_high","whence","newOffset","iov","iovcnt","pnum","q","val","info","receiveInstance","instance","module","exports","unshift","id","receiveInstantiationResult","result","instantiateArrayBuffer","receiver","fetch","credentials","then","binary","instantiate","reason","instantiateStreaming","calledRun","run","doRun","setTimeout","runCaller","ready","MozJpegColorSpace","MozJpegColorSpace2","defaultMozjpegOptions","quality","baseline","arithmetic","progressive","optimize_coding","smoothing","color_space","YCbCr","quant_table","trellis_multipass","trellis_opt_zero","trellis_opt_table","trellis_loops","auto_subsample","chroma_subsample","separate_chroma_quality","chroma_quality","mozjpeg","initMozjpeg","mozjpegWasm","init","optimizeMozjpeg","image","encode","wasm","cachedTextDecoder","ignoreBOM","fatal","cachedUint8Memory0","getUint8Memory0","memory","WASM_VECTOR_LEN","oxipng","cachedInt32Memory0","getInt32Memory0","optimize","level","interlace","retptr","__wbindgen_add_to_stack_pointer","ptr0","malloc","set","__wbindgen_malloc","len0","r0","r1","v2","__wbindgen_free","__wbg_get_imports","imports","wbg","__wbindgen_throw","arg0","arg1","__wbg_init","input","Request","Response","headers","bytes","arrayBuffer","Instance","__wbindgen_wasm_module","initOxipng","oxipngWasm","optimizeOxipng","WorkerResultType","onmessage","assetType","Png","postMessage","output","Complete","Jpeg","optimizeImage","workerUrl","wasmInit","window","Worker","worker","js","JSON","stringify","Blob","objURL","addEventListener","opt","command","validFile","wrapper","ref","__expose","emit","__emit","dragging","selectedFile","handleFileSelect","target","files","dataTransfer","dragStart","preventDefault","dragEnd","dropUploadImage","clickInputFile","disabled","click","error","assetBase64","loading","validatedFile","imageOptions","ErrorMap","FILE_TYPE","unknown","updateAsset","requirements","errors","validTypes","ext","reqSize","fileExt","split","fileErrors","minWidth","minHeight","maxWidth","maxHeight","imgWidth","imgHeight","reader","FileReader","readAsDataURL","confirmOptimize","filename","fileType","navAny","msSaveOrOpenBlob","msSaveBlob","elem","download","appendChild","removeChild","Optimizer"],"mappings":"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"}